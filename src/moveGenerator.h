#ifndef MOVEGENERATOR_H
#define MOVEGENERATOR_H

#include "board.h"

namespace chess {
    class moveGenerator {
    public:
        inline static void generate_moves(const board& Board, bool captures, int* output);
        inline static long long generate_moves_pawn(long long bit, long long oppMask, long long friendMask, long long targetMask, int castlingRights);
        inline static long long generate_moves_knight(long long bit, long long oppMask, long long friendMask, long long targetMask, int castlingRights);
        inline static long long generate_moves_bishop(long long bit, long long oppMask, long long friendMask, long long targetMask, int castlingRights);
        inline static long long generate_moves_rook(long long bit, long long oppMask, long long friendMask, long long targetMask, int castlingRights);
        inline static long long generate_moves_queen(long long bit, long long oppMask, long long friendMask, long long targetMask, int castlingRights);
        inline static long long generate_moves_king(long long bit, long long oppMask, long long friendMask, long long targetMask, int castlingRights);

        using MoveGenFunc = long long(*)(long long, long long, long long, long long, int);
        static MoveGenFunc moveGenerators[6];

        static void load_bishop_magic_table(const std::string& path);
        static void load_rook_magic_table(const std::string& path);

        static constexpr int maxPossibleMoves = 218;
    private:
        static constexpr long long knight_table[64] = { 770LL, 1797LL, 3594LL, 7188LL, 14376LL, 28752LL, 57504LL, 49216LL, 197123LL, 460039LL, 920078LL, 1840156LL, 3680312LL, 7360624LL, 14721248LL, 12599488LL, 50463488LL, 117769984LL, 235539968LL, 471079936LL, 942159872LL, 1884319744LL, 3768639488LL, 3225468928LL, 12918652928LL, 30149115904LL, 60298231808LL, 120596463616LL, 241192927232LL, 482385854464LL, 964771708928LL, 825720045568LL, 3307175149568LL, 7718173671424LL, 15436347342848LL, 30872694685696LL, 61745389371392LL, 123490778742784LL, 246981557485568LL, 211384331665408LL, 846636838289408LL, 1975852459884544LL, 3951704919769088LL, 7903409839538176LL, 15806819679076352LL, 31613639358152704LL, 63227278716305408LL, 54114388906344448LL, 216739030602088448LL, 505818229730443264LL, 1011636459460886528LL, 2023272918921773056LL, 4046545837843546112LL, 8093091675687092224LL, -2260560722335367168LL, -4593460513685372928LL, 144959613005987840LL, 362258295026614272LL, 724516590053228544LL, 1449033180106457088LL, 2898066360212914176LL, 5796132720425828352LL, -6854478632857894912LL, 4665729213955833856LL};
        static constexpr long long king_table[64] = {770LL, 1797LL, 3594LL, 7188LL, 14376LL, 28752LL, 57504LL, 49216LL, 197123LL, 460039LL, 920078LL, 1840156LL, 3680312LL, 7360624LL, 14721248LL, 12599488LL, 50463488LL, 117769984LL, 235539968LL, 471079936LL, 942159872LL, 1884319744LL, 3768639488LL, 3225468928LL, 12918652928LL, 30149115904LL, 60298231808LL, 120596463616LL, 241192927232LL, 482385854464LL, 964771708928LL, 825720045568LL, 3307175149568LL, 7718173671424LL, 15436347342848LL, 30872694685696LL, 61745389371392LL, 123490778742784LL, 246981557485568LL, 211384331665408LL, 846636838289408LL, 1975852459884544LL, 3951704919769088LL, 7903409839538176LL, 15806819679076352LL, 31613639358152704LL, 63227278716305408LL, 54114388906344448LL, 216739030602088448LL, 505818229730443264LL, 1011636459460886528LL, 2023272918921773056LL, 4046545837843546112LL, 8093091675687092224LL, -2260560722335367168LL, -4593460513685372928LL, 144959613005987840LL, 362258295026614272LL, 724516590053228544LL, 1449033180106457088LL, 2898066360212914176LL, 5796132720425828352LL, -6854478632857894912LL, 4665729213955833856LL};
        static constexpr long long castle_free[2][2] = {
            {(1LL << 48) + (1LL << 40), (1LL << 8) + (1LL << 16) + (1LL << 24)},
            {(1LL << 55) + (1LL << 47), (1LL << 15) + (1LL << 23) + (1LL << 31)}
        };

        static constexpr long long rook_masks[64] = {282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144LL, 282578800148862LL, 565157600329216LL, 1130315208590336LL, 2260632380901376LL, 4521733248782336LL, 9145875697770496LL, 35536491765579776LL, 9115426935197958144L};
        static constexpr long long rook_magic[64] = {0x000101010101017ELL, 0x000202020202027CLL, 0x000404040404047ALL, 0x0008080808080876LL, 0x001010101010106ELL, 0x002020202020205ELL, 0x004040404040403ELL, 0x008080808080807ELL, 0x0001010101017E00LL, 0x0002020202027C00LL, 0x0004040404047A00LL, 0x0008080808087600LL, 0x0010101010106E00LL, 0x0020202020205E00LL, 0x0040404040403E00LL, 0x0080808080807E00LL, 0x00010101017E0100LL, 0x00020202027C0200LL, 0x00040404047A0400LL, 0x0008080808760800LL, 0x00101010106E1000LL, 0x00202020205E2000LL, 0x00404040403E4000LL, 0x00808080807E8000LL, 0x000101017E010100LL, 0x000202027C020200LL, 0x000404047A040400LL, 0x0008080876080800LL, 0x001010106E101000LL, 0x002020205E202000LL, 0x004040403E404000LL, 0x008080807E808000LL, 0x0001017E01010100LL, 0x0002027C02020200LL, 0x0004047A04040400LL, 0x0008087608080800LL, 0x0010106E10101000LL, 0x0020205E20202000LL, 0x0040403E40404000LL, 0x0080807E80808000LL, 0x00017E0101010100LL, 0x00027C0202020200LL, 0x00047A0404040400LL, 0x0008760808080800LL, 0x00106E1010101000LL, 0x00205E2020202000LL, 0x00403E4040404000LL, 0x00807E8080808000LL, 0x007E010101010100LL, 0x007C020202020200LL, 0x007A040404040400LL, 0x0076080808080800LL, 0x006E101010101000LL, 0x005E202020202000LL, 0x003E404040404000LL, 0x007E808080808000LL, 0x7E01010101010100LL, 0x7C02020202020200LL, 0x7A04040404040400LL, 0x7608080808080800LL, 0x6E10101010101000LL, 0x5E20202020202000LL, 0x3E40404040404000LL, 0x7E80808080808000LL};
        static constexpr int rook_shifts[64] = {52, 53, 53, 53, 53, 53, 53, 52, 53, 54, 54, 54, 54, 54, 54, 54, 53, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 54, 54, 54, 54, 53, 53, 54, 54, 53, 53, 53, 53, 53};
        static constexpr int rook_indices[64] = {86016, 73728, 36864, 43008, 47104, 51200, 77824, 94208, 69632, 32768, 38912, 10240, 14336, 53248, 57344, 81920, 24576, 33792, 6144, 11264, 15360, 18432, 58368, 61440, 26624, 4096, 7168, 0, 2048, 19456, 22528, 63488, 28672, 5120, 8192, 1024, 3072, 20480, 23552, 65536, 30720, 34816, 9216, 12288, 16384, 21504, 59392, 67584, 71680, 35840, 39936, 13312, 17408, 54272, 60416, 83968, 90112, 75776, 40960, 45056, 49152, 55296, 79872, 98304};
        static long long rook_table[102400];

        static constexpr long long bishop_masks[64] = {};
        static constexpr long long bishop_magic[64] = {0x0040201008040200ULL, 0x0000402010080400ULL, 0x0000004020100A00ULL, 0x0000000040221400ULL, 0x0000000002442800ULL, 0x0000000204085000ULL, 0x0000020408102000ULL, 0x0002040810204000ULL, 0x0020100804020000ULL, 0x0040201008040000ULL, 0x00004020100A0000ULL, 0x0000004022140000ULL, 0x0000000244280000ULL, 0x0000020408500000ULL, 0x0002040810200000ULL, 0x0004081020400000ULL, 0x0010080402000200ULL, 0x0020100804000400ULL, 0x004020100A000A00ULL, 0x0000402214001400ULL, 0x0000024428002800ULL, 0x0002040850005000ULL, 0x0004081020002000ULL, 0x0008102040004000ULL, 0x0008040200020400ULL, 0x0010080400040800ULL, 0x0020100A000A1000ULL, 0x0040221400142200ULL, 0x0002442800284400ULL, 0x0004085000500800ULL, 0x0008102000201000ULL, 0x0010204000402000ULL, 0x0004020002040800ULL, 0x0008040004081000ULL, 0x00100A000A102000ULL, 0x0022140014224000ULL, 0x0044280028440200ULL, 0x0008500050080400ULL, 0x0010200020100800ULL, 0x0020400040201000ULL, 0x0002000204081000ULL, 0x0004000408102000ULL, 0x000A000A10204000ULL, 0x0014001422400000ULL, 0x0028002844020000ULL, 0x0050005008040200ULL, 0x0020002010080400ULL, 0x0040004020100800ULL, 0x0000020408102000ULL, 0x0000040810204000ULL, 0x00000A1020400000ULL, 0x0000142240000000ULL, 0x0000284402000000ULL, 0x0000500804020000ULL, 0x0000201008040200ULL, 0x0000402010080400ULL, 0x0002040810204000ULL, 0x0004081020400000ULL, 0x000A102040000000ULL, 0x0014224000000000ULL, 0x0028440200000000ULL, 0x0050080402000000ULL, 0x0020100804020000ULL, 0x0040201008040200ULL};
        static constexpr int bishop_shifts[64] = {58, 59, 59, 59, 59, 59, 59, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 57, 57, 57, 57, 59, 59, 59, 59, 57, 55, 55, 57, 59, 59, 59, 59, 57, 55, 55, 57, 59, 59, 59, 59, 57, 57, 57, 57, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 58, 59, 59, 59, 59, 59, 59, 58};
        static constexpr int bishop_indices[64] = {4992, 2624, 256, 896, 1280, 1664, 4800, 5120, 2560, 2656, 288, 928, 1312, 1696, 4832, 4928, 0, 128, 320, 960, 1344, 1728, 2304, 2432, 32, 160, 448, 2752, 3776, 1856, 2336, 2464, 64, 192, 576, 3264, 4288, 1984, 2368, 2496, 96, 224, 704, 1088, 1472, 2112, 2400, 2528, 2592, 2688, 832, 1216, 1600, 2240, 4864, 4960, 5056, 2720, 864, 1248, 1632, 2272, 4896, 5184};
        static long long bishop_table[5248];

        static void make_move(long long pos1, long long pos2, const board& Board, int* output);
    };
}

#endif
